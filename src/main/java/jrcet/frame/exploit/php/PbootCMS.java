package jrcet.frame.exploit.php;

import jrcet.diycomponents.DiyJComponent;
import jrcet.diycomponents.DiyJLabel;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

public class PbootCMS extends DiyJComponent {

    public PbootCMS() {
    }

    public JComponent main() {
        JPanel rootPanel = new JPanel(new GridBagLayout());
        rootPanel.setOpaque(true);
//        pbootPanel.setBackground(Color.white);

        GridBagConstraints vulListPanelProperty = new GridBagConstraints();
        vulListPanelProperty.gridy=0; vulListPanelProperty.gridx=0;
        vulListPanelProperty.weightx=0; vulListPanelProperty.weighty=100;
        vulListPanelProperty.fill = GridBagConstraints.BOTH;
        rootPanel.add(vulListPanel(),vulListPanelProperty);

        GridBagConstraints vulLogPanelProperty = new GridBagConstraints();
        vulLogPanelProperty.gridy=0; vulLogPanelProperty.gridx=1;
        vulLogPanelProperty.weightx=100; vulLogPanelProperty.weighty=100;
        vulLogPanelProperty.fill = GridBagConstraints.BOTH;
        rootPanel.add(vulLogPanel(),vulLogPanelProperty);

        GridBagConstraints vulExpPanelProperty = new GridBagConstraints();
        vulExpPanelProperty.gridy=0; vulExpPanelProperty.gridx=2;
        vulExpPanelProperty.weightx=0; vulExpPanelProperty.weighty=100;
        vulExpPanelProperty.fill = GridBagConstraints.BOTH;
        rootPanel.add(vulExpPanel(),vulExpPanelProperty);

        return rootPanel;
    }


    private JComponent vulListPanel() {

        JPanel vulListPanel = new JPanel(new BorderLayout());
        vulListPanel.setOpaque(true);
        vulListPanel.setPreferredSize(new Dimension(250, 0));

        JLabel vulListTopNameLabel = new DiyJLabel("Payloads");
        vulListTopNameLabel.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        vulListPanel.add(vulListTopNameLabel,BorderLayout.NORTH);

        JList<String> vulListPayloadsNameJList = new JList<>(new String[]{"PbootCMS v3.2", "PbootCMS v3.1", "PbootCMS v2.5"});
        DefaultListCellRenderer vulListPayloadsNameJListCellRenderer = (DefaultListCellRenderer) vulListPayloadsNameJList.getCellRenderer();
        vulListPayloadsNameJListCellRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        vulListPayloadsNameJList.addMouseListener(new vulListPayloadsNameJListMouseListener());

        JScrollPane vulListPayloadsNameJListScroll = new JScrollPane(vulListPayloadsNameJList);
        vulListPayloadsNameJListScroll.setBorder(null);
        vulListPanel.add(vulListPayloadsNameJListScroll,BorderLayout.CENTER);

        return vulListPanel;
    }

    private JComponent vulLogPanel() {
        JPanel vulLogPanel = new JPanel(new GridBagLayout());
        vulLogPanel.setOpaque(true);
        vulLogPanel.setBackground(Color.white);
        vulLogPanel.setBorder(BorderFactory.createMatteBorder(0,1,0,1,new Color(203,208,209)));

        GridBagConstraints vulLogTopPanelProperty = new GridBagConstraints();
        vulLogTopPanelProperty.gridy=0; vulLogTopPanelProperty.gridx=1;
        vulLogTopPanelProperty.weightx=0; vulLogTopPanelProperty.weighty=0;
        vulLogTopPanelProperty.fill = GridBagConstraints.CENTER;
        vulLogPanel.add(vulLogTopPanel(),vulLogTopPanelProperty);

        GridBagConstraints vulLogTopLeftBorderPanelProperty = new GridBagConstraints();
        vulLogTopLeftBorderPanelProperty.gridy=0; vulLogTopLeftBorderPanelProperty.gridx=0;
        vulLogTopLeftBorderPanelProperty.weightx=100; vulLogTopLeftBorderPanelProperty.weighty=0;
        vulLogTopLeftBorderPanelProperty.fill = GridBagConstraints.BOTH;
        vulLogPanel.add(vulLogTopLeftBorderPanel(),vulLogTopLeftBorderPanelProperty);

        GridBagConstraints vulLogTopRightBorderPanelProperty = new GridBagConstraints();
        vulLogTopRightBorderPanelProperty.gridy=0; vulLogTopRightBorderPanelProperty.gridx=2;
        vulLogTopRightBorderPanelProperty.weightx=100; vulLogTopRightBorderPanelProperty.weighty=0;
        vulLogTopRightBorderPanelProperty.fill = GridBagConstraints.BOTH;
        vulLogPanel.add(vulLogTopRightBorderPanel(),vulLogTopRightBorderPanelProperty);

        GridBagConstraints defaultVulLogModelPanelProperty = new GridBagConstraints();
        defaultVulLogModelPanelProperty.gridy=1; defaultVulLogModelPanelProperty.gridx=0;
        defaultVulLogModelPanelProperty.weightx=100; defaultVulLogModelPanelProperty.weighty=100;
        defaultVulLogModelPanelProperty.fill = GridBagConstraints.BOTH;
        vulLogPanel.add(attackLogPanel(),defaultVulLogModelPanelProperty);

        return vulLogPanel;
    }

    private JComponent vulExpPanel() {
        
        JPanel vulExpPanel = new JPanel(new BorderLayout());
        vulExpPanel.setOpaque(true);
        vulExpPanel.setPreferredSize(new Dimension(300, 0));

        JLabel vulExpTopNameLabel = new DiyJLabel("Functions");
        vulExpTopNameLabel.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        vulExpPanel.add( vulExpTopNameLabel,BorderLayout.NORTH);

        JPanel vulExpFunctionPanel = new JPanel(new GridBagLayout());
        vulExpFunctionPanel.setOpaque(true);
        vulExpFunctionPanel.setBackground(Color.YELLOW);
        vulExpPanel.add(vulExpFunctionPanel,BorderLayout.CENTER);

        JPanel vulExpFunctionMenuPanel = new JPanel(new GridBagLayout());
        GridBagConstraints vulExpFunctionMenuPanelProperty = new GridBagConstraints();
        vulExpFunctionMenuPanelProperty.fill=GridBagConstraints.BOTH;
        vulExpFunctionMenuPanelProperty.gridy=0;vulExpFunctionMenuPanelProperty.gridx=0;
        vulExpFunctionMenuPanelProperty.weighty=0;vulExpFunctionMenuPanelProperty.weightx=100;
        vulExpFunctionPanel.add(vulExpFunctionMenuPanel,vulExpFunctionMenuPanelProperty);

        DiyJLabel vulExpFunctionMenuDetectLabel = new DiyJLabel("检测漏洞");
        vulExpFunctionMenuDetectLabel.setMapPanel(detectVulPanel());
        vulExpFunctionMenuDetectLabel.clicked = true;
        vulExpFunctionMenuDetectLabel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(2,0,0,0),BorderFactory.createMatteBorder(0,0,2,0,new Color(255,102,51))));
        GridBagConstraints vulExpFunctionMenuDetectLabelProperty = new GridBagConstraints();
        vulExpFunctionMenuDetectLabelProperty.fill=GridBagConstraints.BOTH;
        vulExpFunctionMenuDetectLabelProperty.gridx=0;vulExpFunctionMenuDetectLabelProperty.gridy=0;
        vulExpFunctionMenuDetectLabelProperty.weightx=50;vulExpFunctionMenuDetectLabelProperty.weighty=0;
        vulExpFunctionMenuPanel.add(vulExpFunctionMenuDetectLabel,vulExpFunctionMenuDetectLabelProperty);

        DiyJLabel vulExpFunctionMenuAttackLabel = new DiyJLabel("攻击漏洞");
        vulExpFunctionMenuAttackLabel.setMapPanel(attackVulPanel());
        GridBagConstraints vulExpFunctionMenuAttackLabelProperty = new GridBagConstraints();
        vulExpFunctionMenuAttackLabelProperty.fill=GridBagConstraints.BOTH;
        vulExpFunctionMenuAttackLabelProperty.gridx=1;vulExpFunctionMenuAttackLabelProperty.gridy=0;
        vulExpFunctionMenuAttackLabelProperty.weightx=50;vulExpFunctionMenuAttackLabelProperty.weighty=0;
        vulExpFunctionMenuPanel.add(vulExpFunctionMenuAttackLabel,vulExpFunctionMenuAttackLabelProperty);

        GridBagConstraints defaultvulExpFunctionMenuModelPanelProperty = new GridBagConstraints();
        defaultvulExpFunctionMenuModelPanelProperty.fill=GridBagConstraints.BOTH;
        defaultvulExpFunctionMenuModelPanelProperty.gridy=1;defaultvulExpFunctionMenuModelPanelProperty.gridx=0;
        defaultvulExpFunctionMenuModelPanelProperty.gridwidth=2;defaultvulExpFunctionMenuModelPanelProperty.gridheight=1;
        defaultvulExpFunctionMenuModelPanelProperty.weightx=100;defaultvulExpFunctionMenuModelPanelProperty.weighty=100;
        vulExpFunctionPanel.add(detectVulPanel(),defaultvulExpFunctionMenuModelPanelProperty);

        return vulExpPanel;
    }

    private JComponent vulLogTopLeftBorderPanel(){
        JPanel centerTopLeftBorderPanel = new JPanel();
        centerTopLeftBorderPanel.setOpaque(true);
        centerTopLeftBorderPanel.setBackground(Color.WHITE);
        centerTopLeftBorderPanel.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));

        return centerTopLeftBorderPanel;
    }

    private JComponent vulLogTopRightBorderPanel(){
        JPanel vulLogTopRightBorderPanel = new JPanel();
        vulLogTopRightBorderPanel.setOpaque(true);
        vulLogTopRightBorderPanel.setBackground(Color.WHITE);
        vulLogTopRightBorderPanel.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));

        return vulLogTopRightBorderPanel;
    }

    private JComponent vulLogTopPanel(){
        JPanel vulLogTopPanel = new JPanel(new FlowLayout(FlowLayout.CENTER,0,0));
        vulLogTopPanel.setOpaque(true);

        DiyJLabel vulLogTopAttackMessageButton = new DiyJLabel("攻击日志");
        vulLogTopAttackMessageButton.clicked = true;
        vulLogTopAttackMessageButton.setMapPanel(attackLogPanel());
        vulLogTopAttackMessageButton.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(2,0,0,0),BorderFactory.createMatteBorder(0,0,2,0,new Color(255,102,51))));
        vulLogTopPanel.add(vulLogTopAttackMessageButton);

        DiyJLabel vulLogTopAttackCodeExecuteButton = new DiyJLabel("命令执行");
        vulLogTopAttackCodeExecuteButton.setMapPanel(codeExecutePanel());
        vulLogTopAttackCodeExecuteButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        vulLogTopPanel.add(vulLogTopAttackCodeExecuteButton);

        DiyJLabel vulLogTopAttackUploadShellButton = new DiyJLabel("上传木马");
        vulLogTopAttackUploadShellButton.setMapPanel(uploadShellPanel());
        vulLogTopAttackUploadShellButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        vulLogTopPanel.add(vulLogTopAttackUploadShellButton);

        return vulLogTopPanel;
    }

    private JComponent detectVulPanel() {
        JPanel detectVulPanel = new JPanel();
        detectVulPanel.setOpaque(true);
        detectVulPanel.setBackground(Color.BLUE);
        return detectVulPanel;
    }

    private JComponent attackVulPanel() {
        JPanel attackVulPanel = new JPanel(null);
        attackVulPanel.setBounds(0, 25, 160, 0);
        attackVulPanel.setOpaque(true);
        attackVulPanel.setBackground(Color.YELLOW);
        return attackVulPanel;
    }

    private JComponent uploadShellPanel() {
        JPanel uploadShellPanel = new JPanel(null);
        uploadShellPanel.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, new Color(200, 200, 200)));
        uploadShellPanel.setBounds(1, 20, 478, 0);
        uploadShellPanel.setOpaque(true);
        uploadShellPanel.setBackground(Color.ORANGE);
        return uploadShellPanel;
    }

    private JComponent attackLogPanel() {
        JPanel attackLogPanel = new JPanel(new BorderLayout());
        JTextArea attackLogPanelTextArea = new JTextArea();
        attackLogPanelTextArea.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, new Color(200, 200, 200)));
        attackLogPanelTextArea.setBounds(0, 0, 500, 500);
        attackLogPanel.add(attackLogPanelTextArea,BorderLayout.CENTER);
        return attackLogPanel;
    }

    private JComponent codeExecutePanel() {
        JPanel codeExecutePanel = new JPanel(null);
        codeExecutePanel.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, new Color(200, 200, 200)));
        codeExecutePanel.setBounds(1, 20, 478, 0);
        codeExecutePanel.setOpaque(true);
        codeExecutePanel.setBackground(Color.GREEN);
        return codeExecutePanel;
    }

    static class vulListPayloadsNameJListMouseListener implements MouseListener {
        @Override
        public void mouseClicked(MouseEvent e) {
        }

        @Override
        public void mousePressed(MouseEvent e) {
            JList activeList = (JList) e.getSource();
            System.out.println(activeList.getSelectedValue());
        }

        @Override
        public void mouseReleased(MouseEvent e) {
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }
    }

}