package jrcet.frame.exploit.php;

import jrcet.diycomponents.DiyJComponent;
import jrcet.diycomponents.DiyJLabel;
import jrcet.diycomponents.DiyJTabLabel;
import jrcet.frame.setting.Setting;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

public class PbootCMS extends DiyJComponent {

    public PbootCMS() {
    }

    public JComponent main() {
        JPanel rootPanel = new JPanel(new GridBagLayout());
        rootPanel.setOpaque(false);
        rootPanel.setBackground(Color.WHITE);
        rootPanel.setPreferredSize(new Dimension(0,0));

        GridBagConstraints vulListPanelProperty = new GridBagConstraints(
                0,0,
                1,1,
                0.3,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        );
        rootPanel.add(vulListPanel(),vulListPanelProperty);

        GridBagConstraints vulLogPanelProperty = new GridBagConstraints(
                1,0,
                1,1,
                0.4,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        );;
        rootPanel.add(vulLogPanel(),vulLogPanelProperty);

        GridBagConstraints vulExpPanelProperty = new GridBagConstraints(
                2,0,
                1,1,
                0.3,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        );
        rootPanel.add(vulExpPanel(),vulExpPanelProperty);

        return rootPanel;
    }


    private JComponent vulListPanel() {

        JPanel vulListPanel = new JPanel(new BorderLayout());
        vulListPanel.setOpaque(false);
        vulListPanel.setPreferredSize(new Dimension(0, 0));

        JLabel vulListTopNameLabel = new DiyJLabel("Payloads");
        vulListTopNameLabel.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        vulListPanel.add(vulListTopNameLabel,BorderLayout.NORTH);

        JList<String> vulListPayloadsNameJList = new JList<>(new String[]{"PbootCMS v3.2", "PbootCMS v3.1", "PbootCMS v2.5"});
        DefaultListCellRenderer vulListPayloadsNameJListCellRenderer = (DefaultListCellRenderer) vulListPayloadsNameJList.getCellRenderer();
        vulListPayloadsNameJListCellRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        vulListPayloadsNameJList.addMouseListener(new vulListPayloadsNameJListMouseListener());

        JScrollPane vulListPayloadsNameJListScroll = new JScrollPane(vulListPayloadsNameJList);
        vulListPayloadsNameJListScroll.setBorder(null);
        vulListPanel.add(vulListPayloadsNameJListScroll,BorderLayout.CENTER);

        return vulListPanel;
    }

    private JComponent vulLogPanel() {
        JPanel vulLogPanel = new JPanel(new GridBagLayout());
        vulLogPanel.setOpaque(false);
        vulLogPanel.setBackground(Color.white);
        vulLogPanel.setBorder(BorderFactory.createMatteBorder(0,1,0,1,new Color(203,208,209)));

        GridBagConstraints vulLogTopPanelProperty = new GridBagConstraints(
                1,0,
                1,1,
                0,0,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        );
        vulLogPanel.add(vulLogTopPanel(),vulLogTopPanelProperty);

        GridBagConstraints vulLogTopLeftBorderPanelProperty = new GridBagConstraints(
                0,0,
                1,1,
                1,0,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        );
        vulLogPanel.add(vulLogTopLeftBorderPanel(),vulLogTopLeftBorderPanelProperty);

        GridBagConstraints vulLogTopRightBorderPanelProperty = new GridBagConstraints(
                2,0,
                1,1,
                1,0,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        );
        vulLogPanel.add(vulLogTopRightBorderPanel(),vulLogTopRightBorderPanelProperty);

        GridBagConstraints defaultVulLogModelPanelProperty = new GridBagConstraints(
                0,1,
                1,1,
                1,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        );
        vulLogPanel.add(attackLogPanel(),defaultVulLogModelPanelProperty);

        return vulLogPanel;
    }

    private JComponent vulExpPanel() {
        
        JPanel vulExpPanel = new JPanel(new BorderLayout());
        vulExpPanel.setOpaque(false);
        vulExpPanel.setPreferredSize(new Dimension(0, 0));

        JLabel vulExpTopNameLabel = new DiyJLabel("Functions");
        vulExpTopNameLabel.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        vulExpPanel.add( vulExpTopNameLabel,BorderLayout.NORTH);

        JPanel vulExpFunctionPanel = new JPanel(new GridBagLayout());
        vulExpFunctionPanel.setOpaque(false);
        vulExpFunctionPanel.setBackground(Color.YELLOW);
        vulExpPanel.add(vulExpFunctionPanel,BorderLayout.CENTER);

        JPanel vulExpFunctionMenuPanel = new JPanel(new GridBagLayout());
        GridBagConstraints vulExpFunctionMenuPanelProperty = new GridBagConstraints(
                0,0,
                1,1,
                1,0,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        );
        vulExpFunctionPanel.add(vulExpFunctionMenuPanel,vulExpFunctionMenuPanelProperty);

        DiyJTabLabel vulExpFunctionMenuDetectLabel = new DiyJTabLabel("检测漏洞", Setting.class1DefaultDiyJTabBorderColor,Setting.class1ClickedDiyJTabBorderColor,true);
        vulExpFunctionMenuDetectLabel.setMapPanel(detectVulPanel());
        vulExpFunctionMenuDetectLabel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(2,0,0,0),BorderFactory.createMatteBorder(0,0,2,0,new Color(255,102,51))));
        GridBagConstraints vulExpFunctionMenuDetectLabelProperty = new GridBagConstraints(
                0,0,
                1,1,
                0.5,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        );
        vulExpFunctionMenuPanel.add(vulExpFunctionMenuDetectLabel,vulExpFunctionMenuDetectLabelProperty);

        DiyJTabLabel vulExpFunctionMenuAttackLabel = new DiyJTabLabel("攻击漏洞", Setting.class1DefaultDiyJTabBorderColor,Setting.class1ClickedDiyJTabBorderColor);
        vulExpFunctionMenuAttackLabel.setMapPanel(attackVulPanel());
        GridBagConstraints vulExpFunctionMenuAttackLabelProperty = new GridBagConstraints(
                1,0,
                1,1,
                0.5,0,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        );
        vulExpFunctionMenuPanel.add(vulExpFunctionMenuAttackLabel,vulExpFunctionMenuAttackLabelProperty);

        GridBagConstraints defaultvulExpFunctionMenuModelPanelProperty = new GridBagConstraints(
                0,1,
                2,1,
                1,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        );
        vulExpFunctionPanel.add(detectVulPanel(),defaultvulExpFunctionMenuModelPanelProperty);

        return vulExpPanel;
    }

    private JComponent vulLogTopLeftBorderPanel(){
        JPanel centerTopLeftBorderPanel = new JPanel();
        centerTopLeftBorderPanel.setOpaque(false);
        centerTopLeftBorderPanel.setBackground(Color.WHITE);
        centerTopLeftBorderPanel.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));

        return centerTopLeftBorderPanel;
    }

    private JComponent vulLogTopRightBorderPanel(){
        JPanel vulLogTopRightBorderPanel = new JPanel();
        vulLogTopRightBorderPanel.setOpaque(false);
        vulLogTopRightBorderPanel.setBackground(Color.WHITE);
        vulLogTopRightBorderPanel.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));

        return vulLogTopRightBorderPanel;
    }

    private JComponent vulLogTopPanel(){
        JPanel vulLogTopPanel = new JPanel(new FlowLayout(FlowLayout.CENTER,0,0));
        vulLogTopPanel.setOpaque(false);

        DiyJTabLabel vulLogTopAttackMessageButton = new DiyJTabLabel("攻击日志", Setting.class1DefaultDiyJTabBorderColor,Setting.class1ClickedDiyJTabBorderColor,true);
//        vulLogTopAttackMessageButton.clicked = true;
        vulLogTopAttackMessageButton.setMapPanel(attackLogPanel());
        vulLogTopAttackMessageButton.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(2,0,0,0),BorderFactory.createMatteBorder(0,0,2,0,new Color(255,102,51))));
        vulLogTopPanel.add(vulLogTopAttackMessageButton);

        DiyJTabLabel vulLogTopAttackCodeExecuteButton = new DiyJTabLabel("命令执行", Setting.class1DefaultDiyJTabBorderColor,Setting.class1ClickedDiyJTabBorderColor);
        vulLogTopAttackCodeExecuteButton.setMapPanel(codeExecutePanel());
        vulLogTopAttackCodeExecuteButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        vulLogTopPanel.add(vulLogTopAttackCodeExecuteButton);

        DiyJTabLabel vulLogTopAttackUploadShellButton = new DiyJTabLabel("上传木马", Setting.class1DefaultDiyJTabBorderColor,Setting.class1ClickedDiyJTabBorderColor);
        vulLogTopAttackUploadShellButton.setMapPanel(uploadShellPanel());
        vulLogTopAttackUploadShellButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        vulLogTopPanel.add(vulLogTopAttackUploadShellButton);

        return vulLogTopPanel;
    }

    private JComponent detectVulPanel() {
        JPanel detectVulPanel = new JPanel();
        detectVulPanel.setOpaque(false);
        detectVulPanel.setBackground(Color.BLUE);
        return detectVulPanel;
    }

    private JComponent attackVulPanel() {
        JPanel attackVulPanel = new JPanel(null);
        attackVulPanel.setBounds(0, 25, 160, 0);
        attackVulPanel.setOpaque(false);
        attackVulPanel.setBackground(Color.YELLOW);
        return attackVulPanel;
    }

    private JComponent uploadShellPanel() {
        JPanel uploadShellPanel = new JPanel(null);
        uploadShellPanel.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, new Color(200, 200, 200)));
        uploadShellPanel.setBounds(1, 20, 478, 0);
        uploadShellPanel.setOpaque(false);
        uploadShellPanel.setBackground(Color.ORANGE);
        return uploadShellPanel;
    }

    private JComponent attackLogPanel() {
        JPanel attackLogPanel = new JPanel(new BorderLayout());
        JTextArea attackLogPanelTextArea = new JTextArea();
        attackLogPanelTextArea.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, new Color(200, 200, 200)));
        attackLogPanelTextArea.setBounds(0, 0, 500, 500);
        attackLogPanel.add(attackLogPanelTextArea,BorderLayout.CENTER);
        return attackLogPanel;
    }

    private JComponent codeExecutePanel() {
        JPanel codeExecutePanel = new JPanel(null);
        codeExecutePanel.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, new Color(200, 200, 200)));
        codeExecutePanel.setBounds(1, 20, 478, 0);
        codeExecutePanel.setOpaque(false);
        codeExecutePanel.setBackground(Color.GREEN);
        return codeExecutePanel;
    }

    static class vulListPayloadsNameJListMouseListener implements MouseListener {
        @Override
        public void mouseClicked(MouseEvent e) {
        }

        @Override
        public void mousePressed(MouseEvent e) {
            JList activeList = (JList) e.getSource();
            System.out.println(activeList.getSelectedValue());
        }

        @Override
        public void mouseReleased(MouseEvent e) {
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }
    }

}