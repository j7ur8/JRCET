package jrcet.frame.exploit.php.PbootCMS;

import jrcet.diycomponents.DiyJComponent;
import jrcet.diycomponents.DiyJLabel;
import jrcet.diycomponents.DiyJTabLabel;
import jrcet.frame.setting.Setting;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

public class PbootCMSComponent extends DiyJComponent {

    private final JComponent PbootCMSVulExpFunctionMenuDetectVul = PbootCMSVulExpFunctionMenuDetectVul();
    private final JComponent PbootCMSVulLogMenuAttackLogPanel = PbootCMSVulLogMenuAttackLogPanel();
    private final JComponent PbootCMSVulLogMenuCodeExecutePanel = PbootCMSVulLogMenuCodeExecutePanel();
    private final JComponent PbootCMSVulLogMenuUploadShellPanel = PbootCMSVulLogMenuUploadShellPanel();

    private final JComponent DefaultPbootCMSVulUsePanel = PbootCMSVulLogMenuAttackLogPanel;
    private final JComponent DefaultPbootCMSVulMenuFunctionPanel = PbootCMSVulExpFunctionMenuDetectVul;


    public JComponent main() {
        JPanel PbootCMSComponentPanel = new JPanel(new GridBagLayout());
        PbootCMSComponentPanel.setName("PbootCMSComponentPanel");
        PbootCMSComponentPanel.setOpaque(false);
        PbootCMSComponentPanel.setBackground(Color.WHITE);
        PbootCMSComponentPanel.setPreferredSize(new Dimension(0,0));

        PbootCMSComponentPanel.add(PbootCMSVulListPanel(),new GridBagConstraints(
                0,0,
                1,1,
                0.3,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        ));

        PbootCMSComponentPanel.add(PbootCMSVulUsePanel(),new GridBagConstraints(
                1,0,
                1,1,
                0.4,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        ));

        PbootCMSComponentPanel.add(PbootCMSVulMenuPanel(),new GridBagConstraints(
                2,0,
                1,1,
                0.3,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        ));

        return PbootCMSComponentPanel;
    }

    private JComponent PbootCMSVulListPanel() {

        JPanel PbootCMSVulListPanel = new JPanel(new BorderLayout());
        PbootCMSVulListPanel.setName("PbootCMSVulListPanel");
        PbootCMSVulListPanel.setOpaque(false);
        PbootCMSVulListPanel.setPreferredSize(new Dimension(0, 0));

        JLabel PbootCMSVulListVulListLabel = new DiyJLabel("VulList");
        PbootCMSVulListVulListLabel.setName("PbootCMSVulListVulListLabel");
        PbootCMSVulListVulListLabel.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        PbootCMSVulListPanel.add(PbootCMSVulListVulListLabel,BorderLayout.NORTH);

        JList<String> PbootCMSVulListJList = new JList<>(new String[]{"PbootCMS v3.2", "PbootCMS v3.1", "PbootCMS v2.5"});
        PbootCMSVulListJList.setName("PbootCMSVulListJList");
        ((DefaultListCellRenderer) PbootCMSVulListJList.getCellRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        PbootCMSVulListJList.addMouseListener(new PbootCMSVulListJListMouseListener());

        JScrollPane PbootCMSVulListScroll = new JScrollPane(PbootCMSVulListJList);
        PbootCMSVulListScroll.setName("PbootCMSVulListScroll");
        PbootCMSVulListScroll.setBorder(null);
        PbootCMSVulListPanel.add(PbootCMSVulListScroll,BorderLayout.CENTER);

        return PbootCMSVulListPanel;
    }

    private JComponent PbootCMSVulUsePanel() {
        JPanel PbootCMSVulUsePanel = new JPanel(new GridBagLayout());
        PbootCMSVulUsePanel.setName("PbootCMSVulUsePanel");
        PbootCMSVulUsePanel.setOpaque(false);
        PbootCMSVulUsePanel.setBackground(Color.white);
        PbootCMSVulUsePanel.setBorder(BorderFactory.createMatteBorder(0,1,0,1,new Color(203,208,209)));

        PbootCMSVulUsePanel.add(PbootCMSVulUseMenuTabPanel(),new GridBagConstraints(
                1,0,
                1,1,
                0,0,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        ));

        PbootCMSVulUsePanel.add(PbootCMSVulUseMenuTabBorderPanel(),new GridBagConstraints(
                0,0,
                1,1,
                1,0,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        ));

        PbootCMSVulUsePanel.add(PbootCMSVulUseMenuTabBorderPanel(),new GridBagConstraints(
                2,0,
                1,1,
                1,0,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        ));

        PbootCMSVulUsePanel.add(DefaultPbootCMSVulUsePanel,new GridBagConstraints(
                0,1,
                1,1,
                1,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        ));

        return PbootCMSVulUsePanel;
    }

    private JComponent PbootCMSVulMenuPanel() {
        JPanel PbootCMSVulMenuPanel = new JPanel(new BorderLayout());
        PbootCMSVulMenuPanel.setName("PbootCMSVulMenuPanel");
        PbootCMSVulMenuPanel.setOpaque(false);
        PbootCMSVulMenuPanel.setPreferredSize(new Dimension(0, 0));

        JLabel PbootCMSVulMenuFunctionLabel = new DiyJLabel("Function");
        PbootCMSVulMenuFunctionLabel.setName("PbootCMSVulMenuFunctionLabel");
        PbootCMSVulMenuFunctionLabel.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        PbootCMSVulMenuPanel.add(PbootCMSVulMenuFunctionLabel,BorderLayout.NORTH);

        PbootCMSVulMenuPanel.add(PbootCMSVulMenuFunctionPanel(),BorderLayout.CENTER);

        return PbootCMSVulMenuPanel;
    }

    private JComponent PbootCMSVulUseMenuTabPanel(){
        JPanel PbootCMSVulLogMenuTabPanel = new JPanel(new FlowLayout(FlowLayout.CENTER,0,0));
        PbootCMSVulLogMenuTabPanel.setName("PbootCMSVulLogMenuTabPanel");
        PbootCMSVulLogMenuTabPanel.setOpaque(false);

        DiyJTabLabel PbootCMSVulLogMenuAttackMessageButton = new DiyJTabLabel("攻击日志", Setting.class1DefaultDiyJTabBorderColor,Setting.class1ClickedDiyJTabBorderColor,true);
        PbootCMSVulLogMenuAttackMessageButton.setName("PbootCMSVulLogMenuAttackMessageButton");
        PbootCMSVulLogMenuAttackMessageButton.setMapPanel(PbootCMSVulLogMenuAttackLogPanel);
        PbootCMSVulLogMenuAttackMessageButton.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(2,0,0,0),BorderFactory.createMatteBorder(0,0,2,0,new Color(255,102,51))));
        PbootCMSVulLogMenuTabPanel.add(PbootCMSVulLogMenuAttackMessageButton);

        DiyJTabLabel PbootCMSVulLogMenuCodeExecuteButton = new DiyJTabLabel("命令执行", Setting.class1DefaultDiyJTabBorderColor,Setting.class1ClickedDiyJTabBorderColor);
        PbootCMSVulLogMenuCodeExecuteButton.setName("PbootCMSVulLogMenuCodeExecuteButton");
        PbootCMSVulLogMenuCodeExecuteButton.setMapPanel(PbootCMSVulLogMenuCodeExecutePanel);
        PbootCMSVulLogMenuCodeExecuteButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        PbootCMSVulLogMenuTabPanel.add(PbootCMSVulLogMenuCodeExecuteButton);

        DiyJTabLabel PbootCMSVulLogMenuUploadShellButton = new DiyJTabLabel("上传木马", Setting.class1DefaultDiyJTabBorderColor,Setting.class1ClickedDiyJTabBorderColor);
        PbootCMSVulLogMenuUploadShellButton.setName("PbootCMSVulLogMenuUploadShellButton");
        PbootCMSVulLogMenuUploadShellButton.setMapPanel(PbootCMSVulLogMenuUploadShellPanel);
        PbootCMSVulLogMenuUploadShellButton.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));
        PbootCMSVulLogMenuTabPanel.add(PbootCMSVulLogMenuUploadShellButton);

        return PbootCMSVulLogMenuTabPanel;
    }

    private JComponent PbootCMSVulUseMenuTabBorderPanel(){
        JPanel PbootCMSVulLogMenuTabBorderPanel = new JPanel();
        PbootCMSVulLogMenuTabBorderPanel.setName("PbootCMSVulLogMenuTabBorderPanel");
        PbootCMSVulLogMenuTabBorderPanel.setOpaque(false);
        PbootCMSVulLogMenuTabBorderPanel.setBackground(Color.WHITE);
        PbootCMSVulLogMenuTabBorderPanel.setBorder(BorderFactory.createMatteBorder(0,0,1,0,new Color(203,208,209)));

        return PbootCMSVulLogMenuTabBorderPanel;
    }

    private JComponent PbootCMSVulLogMenuAttackLogPanel() {
        JPanel PbootCMSVulLogMenuAttackMessagePanel = new JPanel(new BorderLayout());
        PbootCMSVulLogMenuAttackMessagePanel.setName("PbootCMSVulLogMenuAttackMessagePanel");

        JTextArea PbootCMSVulLogMenuAttackLogTextArea = new JTextArea();
        PbootCMSVulLogMenuAttackLogTextArea.setName("PbootCMSVulLogMenuAttackLogTextArea");
        PbootCMSVulLogMenuAttackLogTextArea.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, new Color(200, 200, 200)));
        PbootCMSVulLogMenuAttackLogTextArea.setBounds(0, 0, 500, 500);
        PbootCMSVulLogMenuAttackMessagePanel.add(PbootCMSVulLogMenuAttackLogTextArea,BorderLayout.CENTER);

        return PbootCMSVulLogMenuAttackMessagePanel;
    }

    private JComponent PbootCMSVulMenuFunctionPanel(){
        JPanel PbootCMSVulMenuFunctionPanel = new JPanel(new GridBagLayout());
        PbootCMSVulMenuFunctionPanel.setName("PbootCMSVulMenuFunctionPanel");
        PbootCMSVulMenuFunctionPanel.setOpaque(false);
        PbootCMSVulMenuFunctionPanel.setBackground(Color.YELLOW);

        PbootCMSVulMenuFunctionPanel.add(PbootCMSVulMenuFunctionMenuTabPanel(), new GridBagConstraints(
                0,0,
                1,1,
                1,0,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        ));
        PbootCMSVulMenuFunctionPanel.add(DefaultPbootCMSVulMenuFunctionPanel,new GridBagConstraints(
                0,1,
                2,1,
                1,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        ));

        return PbootCMSVulMenuFunctionPanel;
    }

    private JComponent PbootCMSVulMenuFunctionMenuTabPanel(){

        JPanel PbootCMSVulMenuFunctionMenuTabPanel = new JPanel(new GridBagLayout());
        PbootCMSVulMenuFunctionMenuTabPanel.setName("PbootCMSVulMenuFunctionMenuTabPanel");

        DiyJTabLabel PbootCMSVulMenuFunctionMenuDetectVulLabel = new DiyJTabLabel(
                "检测漏洞",
                Setting.class1DefaultDiyJTabBorderColor,
                Setting.class1ClickedDiyJTabBorderColor,true
        );
        PbootCMSVulMenuFunctionMenuDetectVulLabel.setName("PbootCMSVulMenuFunctionMenuDetectVulLabel");
        PbootCMSVulMenuFunctionMenuDetectVulLabel.setMapPanel(PbootCMSVulExpFunctionMenuDetectVul);
        PbootCMSVulMenuFunctionMenuDetectVulLabel.setBorder(
                BorderFactory.createCompoundBorder(
                        BorderFactory.createEmptyBorder(2,0,0,0),
                        BorderFactory.createMatteBorder(0,0,2,0,
                                new Color(255,102,51))
                )
        );

        DiyJTabLabel PbootCMSVulMenuFunctionMenuVulAttackLabel = new DiyJTabLabel(
                "漏洞攻击",
                Setting.class1DefaultDiyJTabBorderColor,
                Setting.class1ClickedDiyJTabBorderColor);
        PbootCMSVulMenuFunctionMenuVulAttackLabel.setName("PbootCMSVulMenuFunctionMenuVulAttackLabel");
        PbootCMSVulMenuFunctionMenuVulAttackLabel.setMapPanel(PbootCMSVulMenuFunctionMenuVulAttack());

        PbootCMSVulMenuFunctionMenuTabPanel.add(PbootCMSVulMenuFunctionMenuDetectVulLabel,new GridBagConstraints(
                0,0,
                1,1,
                0.5,1,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        ));


        PbootCMSVulMenuFunctionMenuTabPanel.add(PbootCMSVulMenuFunctionMenuVulAttackLabel,new GridBagConstraints(
                1,0,
                1,1,
                0.5,0,
                GridBagConstraints.CENTER,
                GridBagConstraints.BOTH,
                new Insets(0,0,0,0),
                0,0
        ));

        return PbootCMSVulMenuFunctionMenuTabPanel;
    }
    private JComponent PbootCMSVulExpFunctionMenuDetectVul() {
        JPanel PbootCMSVulExpFunctionMenuDetectVul = new JPanel();
        PbootCMSVulExpFunctionMenuDetectVul.setName("PbootCMSVulExpFunctionMenuDetectVul");
        PbootCMSVulExpFunctionMenuDetectVul.setOpaque(false);
        PbootCMSVulExpFunctionMenuDetectVul.setBackground(Color.BLUE);
        return PbootCMSVulExpFunctionMenuDetectVul;
    }

    private JComponent PbootCMSVulMenuFunctionMenuVulAttack() {
        JPanel PbootCMSVulMenuFunctionMenuVulAttack = new JPanel(null);
        PbootCMSVulMenuFunctionMenuVulAttack.setName("PbootCMSVulMenuFunctionMenuVulAttack");
        PbootCMSVulMenuFunctionMenuVulAttack.setBounds(0, 25, 160, 0);
        PbootCMSVulMenuFunctionMenuVulAttack.setOpaque(false);
        PbootCMSVulMenuFunctionMenuVulAttack.setBackground(Color.YELLOW);
        return PbootCMSVulMenuFunctionMenuVulAttack;
    }

    private JComponent PbootCMSVulLogMenuUploadShellPanel() {
        JPanel PbootCMSVulLogMenuUploadShellPanel = new JPanel(null);
        PbootCMSVulLogMenuUploadShellPanel.setName("PbootCMSVulLogMenuUploadShellPanel");
        PbootCMSVulLogMenuUploadShellPanel.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, new Color(200, 200, 200)));
        PbootCMSVulLogMenuUploadShellPanel.setBounds(1, 20, 478, 0);
        PbootCMSVulLogMenuUploadShellPanel.setOpaque(false);
        PbootCMSVulLogMenuUploadShellPanel.setBackground(Color.ORANGE);
        return PbootCMSVulLogMenuUploadShellPanel;
    }

    private JComponent PbootCMSVulLogMenuCodeExecutePanel() {
        JPanel PbootCMSVulLogMenuCodeExecutePanel = new JPanel(null);
        PbootCMSVulLogMenuCodeExecutePanel.setName("PbootCMSVulLogMenuCodeExecutePanel");
        PbootCMSVulLogMenuCodeExecutePanel.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, new Color(200, 200, 200)));
        PbootCMSVulLogMenuCodeExecutePanel.setBounds(1, 20, 478, 0);
        PbootCMSVulLogMenuCodeExecutePanel.setOpaque(false);
        PbootCMSVulLogMenuCodeExecutePanel.setBackground(Color.GREEN);
        return PbootCMSVulLogMenuCodeExecutePanel;
    }

    static class PbootCMSVulListJListMouseListener implements MouseListener {
        @Override
        public void mouseClicked(MouseEvent e) {
        }

        @Override
        public void mousePressed(MouseEvent e) {
            JList<String> activeList = (JList<String>) e.getSource();
            System.out.println(activeList.getSelectedValue());
        }

        @Override
        public void mouseReleased(MouseEvent e) {
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }
    }

}